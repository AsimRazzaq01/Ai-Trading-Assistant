# docker-compose.yml

# ============================================================
# üöÄ PROFIT PATH ‚Äî Full Stack (Postgres + FastAPI + Next.js)
# ============================================================

version: "3.9"

services:
  # ----------------------------------------------------------
  # üêò PostgreSQL Database
  # ----------------------------------------------------------
  ai_db:
    image: postgres:16
    container_name: ai_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-newpassword123}
      POSTGRES_DB: ${POSTGRES_DB:-ai_trading}
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    # Uncomment if you want to connect via DBeaver or psql locally:
    # ports:
    #   - "5432:5432"

  # ----------------------------------------------------------
  # ‚öôÔ∏è FastAPI Backend
  # ----------------------------------------------------------
  ai_backend:
    build:
      context: ./backend
    container_name: ai_backend
    restart: unless-stopped
    env_file:
      - ./.env
      - ./backend/.env
    depends_on:
      - ai_db
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg2://postgres:newpassword123@ai_db:5432/ai_trading}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-supersecretkey}
      ALLOWED_ORIGINS: "http://localhost:3000,http://127.0.0.1:3000,http://ai_frontend:3000"

  # ----------------------------------------------------------
  # üíª Next.js Frontend
  # ----------------------------------------------------------
  ai_frontend:
    build:
      context: ./frontend
      args:
        # ‚úÖ Build-time environment variables
        NEXT_PUBLIC_API_URL_BROWSER: http://localhost:8000
        API_URL_INTERNAL: http://ai_backend:8000
    container_name: ai_frontend
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      # ‚úÖ Runtime environment variables
      NEXT_PUBLIC_API_URL_BROWSER: http://localhost:8000
      API_URL_INTERNAL: http://ai_backend:8000
      NODE_ENV: production
      PORT: 3000
    depends_on:
      - ai_backend
    ports:
      - "3000:3000"

# ----------------------------------------------------------
# üíæ Persistent volume for Postgres data
# ----------------------------------------------------------
volumes:
  dbdata:

# ----------------------------------------------------------
# üåê Shared Docker bridge network
# ----------------------------------------------------------
networks:
  default:
    driver: bridge
